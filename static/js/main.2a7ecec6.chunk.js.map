{"version":3,"sources":["types/FilterBy.ts","components/TodoElement/TodoElement.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoElement","memo","todo","onSelect","isSelected","id","title","completed","className","cn","type","onClick","TodoList","todos","userId","map","TodoFilter","query","onChangeOption","onChangeQuery","onChangeApplyQuery","onChange","target","value","all","active","placeholder","event","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","user","setUser","useEffect","catch","error","Error","statusSelect","href","email","name","App","setTodos","isLoadingTodos","setIsLoadingTodos","selectedTodo","setSelectedTodo","setQuery","appliedQuery","setAppliedQuery","option","setOption","console","log","applyQuery","useCallback","f","timerId","clearTimeout","args","debounce","handleSelectedTodo","handleClearSelectedTodo","handleChangeQuery","handleChangeOption","finally","visibleTodos","useMemo","filter","queryToLower","toLowerCase","trim","includes","findQueryInTheString","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a7ecec6.chunk.js","sourcesContent":["export enum FilterBy {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  onSelect: (todo: Todo) => void;\n  isSelected: boolean;\n}\n\nexport const TodoElement: FC<Props> = memo(({ todo, onSelect, isSelected }) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': isSelected })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelect(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye': !isSelected,\n              'fa-eye-slash': isSelected,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n});\n","import { FC, memo } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoElement } from '../TodoElement/TodoElement';\n\ninterface Props {\n  todos: Todo[];\n  userId: number | null;\n  onSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: FC<Props> = memo((\n  { todos, onSelect, userId },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id } = todo;\n          const isSelected = userId === id;\n\n          return (\n            <TodoElement\n              todo={todo}\n              onSelect={onSelect}\n              isSelected={isSelected}\n              key={id}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import { FC, memo } from 'react';\nimport { FilterBy } from '../../types/FilterBy';\n\ninterface Props {\n  query: string;\n  onChangeQuery: (event: string) => void;\n  onChangeApplyQuery : (event: string) => void;\n  onChangeOption: (event: FilterBy) => void;\n}\n\nexport const TodoFilter: FC<Props> = memo((\n  {\n    query,\n    onChangeOption,\n    onChangeQuery,\n    onChangeApplyQuery,\n  },\n) => {\n  const handleClearQuery = () => onChangeQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={({ target }) => {\n              switch (target.value) {\n                case 'all':\n                  onChangeOption(FilterBy.all);\n                  break;\n                case 'active':\n                  onChangeOption(FilterBy.active);\n                  break;\n                case 'completed':\n                  onChangeOption(FilterBy.completed);\n                  break;\n                default:\n              }\n            }}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onChangeQuery(event.target.value);\n            onChangeApplyQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import {\n  useEffect, useState, memo, FC,\n} from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: FC<Props> = memo(({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(\n    () => {\n      getUser(todo.userId)\n        .then(setUser)\n        .catch(error => {\n          throw new Error(error.statusSelect);\n        });\n    },\n    [],\n  );\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClose();\n                setUser(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import {\n  FC, useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { FilterBy } from './types/FilterBy';\n\nconst findQueryInTheString = (query: string, title: string) => {\n  const queryToLower = query.toLowerCase().trim();\n  const titleToLower = title.toLowerCase();\n\n  return titleToLower.includes(queryToLower);\n};\n\nconst debounce = (f: (string: string) => void, delay: number) => {\n  let timerId: any;\n\n  return (...args: any) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoadingTodos, setIsLoadingTodos] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [option, setOption] = useState<FilterBy>(FilterBy.all);\n\n  // eslint-disable-next-line no-console\n  console.log(option, appliedQuery);\n\n  const applyQuery = useCallback(debounce(setAppliedQuery, 1000), []);\n\n  const handleSelectedTodo = useCallback((todo: Todo) => (\n    setSelectedTodo(todo)\n  ), []);\n\n  const handleClearSelectedTodo = useCallback(() => setSelectedTodo(null), []);\n\n  const handleChangeQuery = useCallback((value: string) => setQuery(value), []);\n\n  const handleChangeOption = useCallback((value: FilterBy) => (\n    setOption(value)\n  ), []);\n\n  useEffect(\n    () => {\n      getTodos()\n        .then(setTodos)\n        .finally(() => setIsLoadingTodos(false))\n        .catch(error => {\n          throw new Error(`${error} Error`);\n        });\n    }, [],\n  );\n\n  let visibleTodos = useMemo(() => todos.filter(({ title }) => (\n    findQueryInTheString(appliedQuery, title))), [appliedQuery, todos]);\n\n  if (option !== FilterBy.all) {\n    visibleTodos = visibleTodos.filter(({ completed }) => {\n      switch (option) {\n        case FilterBy.completed:\n          return completed;\n        case FilterBy.active:\n          return !completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={handleChangeQuery}\n                onChangeOption={handleChangeOption}\n                onChangeApplyQuery={applyQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos ? (\n                <Loader />\n              ) : (\n                <>\n                  {!visibleTodos.length\n                    ? (\n                      <h1>Todos not found...</h1>\n                    ) : (\n                      <TodoList\n                        todos={visibleTodos}\n                        userId={selectedTodo?.id || null}\n                        onSelect={handleSelectedTodo}\n                      />\n                    )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={handleClearSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}